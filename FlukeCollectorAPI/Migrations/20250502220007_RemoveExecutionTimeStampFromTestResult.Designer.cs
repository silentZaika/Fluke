// <auto-generated />
using System;
using FlukeCollectorAPI.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlukeCollectorAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250502220007_RemoveExecutionTimeStampFromTestResult")]
    partial class RemoveExecutionTimeStampFromTestResult
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("FlukeCollectorAPI.Model.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Duration")
                        .HasColumnType("REAL");

                    b.Property<string>("FailureMessage")
                        .HasColumnType("TEXT");

                    b.Property<string>("StackTrace")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TestRunId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestRunId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("FlukeCollectorAPI.Model.TestRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Duration")
                        .HasColumnType("REAL");

                    b.Property<int>("Failed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StarTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TestRunName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TestRuns");
                });

            modelBuilder.Entity("FlukeCollectorAPI.Model.TestResult", b =>
                {
                    b.HasOne("FlukeCollectorAPI.Model.TestRun", null)
                        .WithMany("TestResults")
                        .HasForeignKey("TestRunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FlukeCollectorAPI.Model.TestRun", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
